package Formularios;

import Clases.ExportarExcel;
import Clases.LogicaMatricula;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Smit
 */
public final class ReporteMatriculas extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReporteNotas
     */
    public ReporteMatriculas() {
        initComponents();
        //Mostrar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        bs = new javax.swing.JTextField();
        n2 = new javax.swing.JLabel();
        btnbuscar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        grado = new javax.swing.JComboBox<>();
        n10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        secc = new javax.swing.JComboBox<>();
        bsc3 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Reporte Matricula");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LG.png"))); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Roboto Condensed", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LISTA DE ALUMNOS : \"IE Amigos School\"");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1260, 40));

        bs.setBorder(null);
        getContentPane().add(bs, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, 340, 40));

        n2.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        n2.setText("Buscar:");
        getContentPane().add(n2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, 90, 40));

        btnbuscar1.setBackground(new java.awt.Color(51, 51, 255));
        btnbuscar1.setFont(new java.awt.Font("Roboto Medium", 1, 14)); // NOI18N
        btnbuscar1.setForeground(new java.awt.Color(255, 255, 255));
        btnbuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/23.png"))); // NOI18N
        btnbuscar1.setText("BUSCAR");
        btnbuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnbuscar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, -1, 40));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabla);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 1220, 520));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, 360, 20));

        grado.setFont(new java.awt.Font("Roboto Light", 0, 14)); // NOI18N
        grado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecionar>", "1", "2", "3", "4", "5" }));
        getContentPane().add(grado, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 140, 30));

        n10.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        n10.setText("Grado:");
        getContentPane().add(n10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 60, 30));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setText("Sección:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 60, 30));

        secc.setFont(new java.awt.Font("Roboto Condensed Light", 0, 14)); // NOI18N
        secc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecionar>", "A", "B", "C" }));
        getContentPane().add(secc, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 140, 30));

        bsc3.setBackground(new java.awt.Color(0, 102, 51));
        bsc3.setFont(new java.awt.Font("Roboto Medium", 0, 14)); // NOI18N
        bsc3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/14.png"))); // NOI18N
        bsc3.setText("Mostrar");
        bsc3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bsc3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bsc3MouseExited(evt);
            }
        });
        bsc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsc3ActionPerformed(evt);
            }
        });
        getContentPane().add(bsc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 200, 40));

        jButton3.setBackground(new java.awt.Color(0, 204, 51));
        jButton3.setFont(new java.awt.Font("Roboto Medium", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/24.png"))); // NOI18N
        jButton3.setText("GENERAR REPORTE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 110, -1, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscar1ActionPerformed
        Buscar(bs.getText());
    }//GEN-LAST:event_btnbuscar1ActionPerformed

    private void bsc3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bsc3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bsc3MouseEntered

    private void bsc3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bsc3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_bsc3MouseExited

    private void bsc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsc3ActionPerformed
        int Grado = Integer.parseInt(grado.getSelectedItem().toString());
        String Seccion = secc.getSelectedItem().toString();
        Mostrar(Grado, Seccion);
    }//GEN-LAST:event_bsc3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        GenerarReportePDF();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bs;
    private javax.swing.JButton bsc3;
    private javax.swing.JButton btnbuscar1;
    private javax.swing.JComboBox<String> grado;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel n10;
    private javax.swing.JLabel n2;
    private javax.swing.JComboBox<String> secc;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
    
    private void GenerarReportePDF() {
        try {
        // Obtener el apellido del alumno para el nombre del archivo
            String apellidoAlumno = tabla.getValueAt(0, 3).toString(); // Ajusta el índice si es necesario
            String fileName = "Matricula_" + apellidoAlumno + ".pdf";

        // Crear documento PDF
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();
                // Crear una tabla para el logo y el título
            PdfPTable headerTable = new PdfPTable(2);
            headerTable.setWidthPercentage(100);
            headerTable.setWidths(new float[] {1, 4});
            Paragraph titulo = new Paragraph("REPORTE DE MATRICULA", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18));
            titulo.setAlignment(Element.ALIGN_CENTER);
            document.add(titulo);
        
        //Logo
            String logoPath = "C:\\Users\\Smit1\\OneDrive\\Documentos\\Proyectos\\Amigos School\\src\\Imagenes\\0.png"; // Cambia esta ruta por la ruta de tu logo
            Image logo = Image.getInstance(logoPath);
            logo.scaleToFit(100, 100);
            logo.setAbsolutePosition(40, document.getPageSize().getRight() +140);
            document.add(logo);
            document.add(Chunk.NEWLINE);
            Paragraph title = new Paragraph("I.E AMIGOS SCHOOL", FontFactory.getFont(FontFactory.TIMES_ITALIC, 12));
            title.setAlignment(Element.ANNOTATION);
            document.add(title);
            document.add(Chunk.NEWLINE);
        
        // Información del grado, sección y tutor
            String fechaActual = new SimpleDateFormat("dd/MM/yyyy").format(new Date());
            PdfPTable infoTable = new PdfPTable(4);
            infoTable.setWidthPercentage(100);
            infoTable.addCell(getColoredCell("Codigo: ", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY)); // Celda vacía
            infoTable.addCell(getColoredCell(tabla.getValueAt(0, 1).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE)); // Celda vacía
            infoTable.addCell(getColoredCell("Fecha:", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY));
            infoTable.addCell(getColoredCell(fechaActual, PdfPCell.ALIGN_CENTER, BaseColor.WHITE)); // Ejemplo de fecha de exportación
            infoTable.addCell(getColoredCell("Tutor: ", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY));
            infoTable.addCell(getColoredCell(tabla.getValueAt(0, 16).toString() + " " +tabla.getValueAt(0, 17).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));// Tutor
            infoTable.addCell(getColoredCell("Grado Académico:", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY)); // Grado
            infoTable.addCell(getColoredCell(tabla.getValueAt(0, 14).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE)); // Grado
            infoTable.addCell(getColoredCell("Sección:", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY)); // Sección
            infoTable.addCell(getColoredCell(tabla.getValueAt(0, 15).toString() , PdfPCell.ALIGN_CENTER, BaseColor.WHITE)); // Sección
            infoTable.addCell(getColoredCell("Colegio:", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY)); // Celda vacía
            infoTable.addCell(getColoredCell("Amigos School", PdfPCell.ALIGN_CENTER, BaseColor.WHITE)); // Celda vacía

            document.add(infoTable);
            document.add(Chunk.NEWLINE);

        // Tabla de datos del alumno
            PdfPTable alumnoTable = new PdfPTable(2);
            alumnoTable.setWidthPercentage(100);
            alumnoTable.addCell(getColoredCell("Alumno:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 2).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            alumnoTable.addCell(getColoredCell("Apellido:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 3).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            alumnoTable.addCell(getColoredCell("DNI:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 4).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            alumnoTable.addCell(getColoredCell("Sexo:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 5).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            alumnoTable.addCell(getColoredCell("Dirección:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 6).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            alumnoTable.addCell(getColoredCell("Fecha de Nacimiento:", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            alumnoTable.addCell(getColoredCell(tabla.getValueAt(0, 7).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));

        // Extraer datos del alumno y llenar la tabla
            DefaultTableModel model = (DefaultTableModel) tabla.getModel();
            int numRows = model.getRowCount();

            document.add(alumnoTable);
            document.add(Chunk.NEWLINE);

        // Tabla de datos del apoderado
            PdfPTable apoderadoTable = new PdfPTable(2);
            apoderadoTable.setWidthPercentage(100);
            apoderadoTable.addCell(getColoredCell("Parentesco", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 8).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            apoderadoTable.addCell(getColoredCell("Nombre del Apoderado", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 9).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            apoderadoTable.addCell(getColoredCell("Apellido del Apoderado", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 10).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            apoderadoTable.addCell(getColoredCell("DNI del Apoderado", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 11).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            apoderadoTable.addCell(getColoredCell("Teléfono", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 12).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));
            apoderadoTable.addCell(getColoredCell("Fecha del Apoderado", PdfPCell.ALIGN_LEFT, BaseColor.LIGHT_GRAY));
            apoderadoTable.addCell(getColoredCell(tabla.getValueAt(0, 13).toString(), PdfPCell.ALIGN_CENTER, BaseColor.WHITE));

            document.add(apoderadoTable);
            document.add(Chunk.NEWLINE);

        // Tabla de cursos
            PdfPTable cursosTable = new PdfPTable(1);
            cursosTable.setWidthPercentage(100);
            cursosTable.addCell(getColoredCell("Curso", PdfPCell.ALIGN_CENTER, BaseColor.LIGHT_GRAY));

        // Extraer datos de los cursos y llenar la tabla
            for (int i = 0; i < numRows; i++) {
                cursosTable.addCell(model.getValueAt(i, 18).toString());
            }

            document.add(cursosTable);
            document.add(Chunk.NEWLINE);

            document.close();
            
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                File pdfFile = new File(fileName);
                if (pdfFile.exists()) {
                desktop.open(pdfFile);
                }
            }

            System.out.println("PDF generado exitosamente!");
            JOptionPane.showMessageDialog(null, "PDF generado exitosamente!");

        } catch (DocumentException | HeadlessException | FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error al generar PDF: " + e.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(ReporteMatriculas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private static PdfPCell getColoredCell(String text, int alignment, BaseColor bgColor) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        cell.setPadding(5);
        cell.setHorizontalAlignment(alignment);
        cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
        cell.setBackgroundColor(bgColor);
        cell.setBorderColor(BaseColor.BLACK);
        return cell;
    }

    public void Buscar(String Codigo) {
        try {
            DefaultTableModel modelo;
            LogicaMatricula fun = new LogicaMatricula();
            modelo = fun.Buscar_Reporte_Matricula(Codigo);
            tabla.setModel(modelo);
            ocultar_columnas();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e);
        }
    }
    
    public void Mostrar(int r, String g) {
        try {
            DefaultTableModel modelo;
            LogicaMatricula fun = new LogicaMatricula();
            modelo = fun.Mostrar_Reporte_Matricula(r, g);
            tabla.setModel(modelo);
            ocultar_columnas();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e);
        }
    }
    
    public void ocultar_columnas(){
        tabla.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla.getColumnModel().getColumn(0).setMinWidth(0);
        tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
}
